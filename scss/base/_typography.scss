/// Line height of text inside `<p>` elements.
///
/// @type Number
$paragraph-line-height: 1.6 !default;

/// Bottom margin of paragraphs.
///
/// @type Number
$paragraph-margin-bottom: 1rem !default;

/// Color of headers.
///
/// @type Color
$header-color: inherit !default;

/// Font size of `<small>` elements.
///
/// @type Number
$small-font-size: 80% !default;

/// Color of `<small>` elements when placed inside headers.
///
/// @type Color
$header-small-font-color: $grey !default;

/// Font family for header elements.
///
/// @type String | List
$header-font-family: $base-font-family !default;

/// Font style (e.g. italicized) of headers.
///
/// @type String
$header-font-style: normal !default;

/// Font weight of headers.
///
/// @type String
$header-font-weight: $base-font-weight-normal !default;

/// Styles for headings at various screen sizes. Each key is a breakpoint, and each value is a map of heading styles.
///
/// @type Map
$header-styles: (
  small: (
    h1: (
      font-size: rem-calc(24),
      margin-bottom: rem-calc(20)
    ),
    h2: (
      font-size: rem-calc(20)
    ),
    h3: (
      font-size: rem-calc(19)
    ),
    h4: (
      font-size: rem-calc(18)
    ),
    h5: (
      font-size: rem-calc(17)
    ),
    h6: (
      font-size: rem-calc(16)
    ),
  ),
  medium: (
    h1: (
      font-size: rem-calc(48)
    ),
    h2: (
      font-size: rem-calc(40)
    ),
    h3: (
      font-size: rem-calc(31)
    ),
    h4: (
      font-size: rem-calc(25)
    ),
    h5: (
      font-size: rem-calc(20)
    ),
    h6: (
      font-size: rem-calc(16)
    ),
  ),
) !default;

/// Default color for links.
///
/// @type Color
$anchor-color: $primary-color !default;

/// Default color for links on hover.
///
/// @type Color
$anchor-color-hover: scale-color($anchor-color, $lightness: -14%) !default;

/// Default text deocration for links.
///
/// @type String
$anchor-text-decoration: none !default;

/// Default text decoration for links on hover.
///
/// @type String
$anchor-text-decoration-hover: none !default;

/// Maximum width of a divider.
///
/// @type Number
$hr-width: $base-width !default;

/// Default border for a divider.
///
/// @type List
$hr-border: 1px solid $grey !default;

/// Default margin for a divider.
///
/// @type Number | List
$hr-margin: rem-calc(20) auto !default;

/// Line height for items in a list.
///
/// @type Number
$list-line-height: $paragraph-line-height !default;

/// Bottom margin for items in a list.
///
/// @type Number
$list-margin-bottom: $paragraph-margin-bottom !default;

/// Bullet type to use for unordered lists (e.g., `square`, `circle`, `disc`).
///
/// @type String
$list-style-type: disc !default;

/// Positioning for bullets on unordered list items.
///
/// @type String
$list-style-position: outside !default;

/// Left (or right) margin for lists.
///
/// @type Number
$list-side-margin: 1.25rem !default;

/// Left (or right) margin for a list inside a list.
///
/// @type Number
$list-nested-side-margin: 1.25rem !default;

/// Bottom margin for `<dl>` elements.
///
/// @type Number
$definition-list-margin-bottom: 1rem !default;

/// Font weight for `<dt>` elements.
///
/// @type String
$definition-list-term-weight: $base-font-weight-bold !default;

/// Spacing between `<dt>` and `<dd>` elements.
///
/// @type Number
$definition-list-term-margin-bottom: 0.3rem !default;

/// Text color of `<blockquote>` elements.
///
/// @type Color
$blockquote-color: $grey !default;

/// Padding inside a `<blockquote>` element.
///
/// @type Number | List
$blockquote-padding: rem-calc(9 20 0 19) !default;

/// Side border for `<blockquote>` elements.
///
/// @type List
$blockquote-border: 1px solid $grey !default;

/// Font size for `<cite>` elements.
///
/// @type Number
$cite-font-size: rem-calc(13) !default;

/// Text color for `<cite>` elements.
///
/// @type Color
$cite-color: $grey !default;

/// Pseudo content for `<cite>` elements.
///
/// @type String
$cite-pseudo-content: '\2014 \0020' !default;

/// Bottom border style for `<abbr>` elements.
///
/// @type List
$abbr-underline: 1px dotted $black !default;

/// Text color of code samples.
///
/// @type Color
$code-color: $black !default;

/// Font family of code samples.
///
/// @type String | List
$code-font-family: $base-font-family-monospace !default;

/// Font weight of text in code samples.
///
/// @type String
$code-font-weight: $base-font-weight-normal !default;

/// Background color of code samples.
///
/// @type Color
$code-background: $grey !default;

/// Border around code samples.
///
/// @type List
$code-border: 1px solid $grey !default;

/// Padding around text of code samples.
///
/// @type Number | List
$code-padding: rem-calc(2 5 1) !default;

/// Font family for `<kbd>` elements.
///
/// @type String | List
$keystroke-font: $base-font-family-monospace !default;

/// Text color for `<kbd>` elements.
///
/// @type Color
$keystroke-color: $black !default;

/// Background color for `<kbd>` elements.
///
/// @type Color
$keystroke-background: $grey !default;

/// Padding for `<kbd>` elements.
///
/// @type Number | List
$keystroke-padding: rem-calc(2 4 0) !default;

/// Border radius for `<kbd>` elements.
///
/// @type Number | List
$keystroke-radius: $base-radius !default;

@mixin typography() {
  // Typography resets
  div,
  dl,
  dt,
  dd,
  ul,
  ol,
  li,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  pre,
  form,
  p,
  blockquote,
  th,
  td {
    margin: 0;
    padding: 0;
  }

  // Paragraphs
  p {
    margin-bottom: $paragraph-margin-bottom;

    font-size: inherit;
    line-height: $paragraph-line-height;
  }

  // Emphasized text
  em,
  i {
    font-style: italic;
    line-height: inherit;
  }

  // Strong text
  strong,
  b {
    font-weight: $base-font-weight-bold;
    line-height: inherit;
  }

  // Small text
  small {
    font-size: $small-font-size;
    line-height: inherit;
  }

  // Headings
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: $header-font-family;
    font-style: $header-font-style;
    font-weight: $header-font-weight;
    color: $header-color;

    small {
      line-height: 0;
      color: $header-small-font-color;
    }
  }

  // Heading styles
  @each $breakpoint, $headers in $header-styles {
    @include breakpoint-up($breakpoint) {
      @each $header, $style in $headers {
        #{$header} {
          @each $property, $value in $style {
            #{$property}: $value;
          }
        }
      }
    }
  }

  // Links
  a {
    color: $anchor-color;
    cursor: pointer;
    line-height: inherit;
    text-decoration: $anchor-text-decoration;

    &:hover,
    &:focus {
      color: $anchor-color-hover;
      @if $anchor-text-decoration-hover != $anchor-text-decoration {
        text-decoration: $anchor-text-decoration-hover;
      }
    }

    img {
      border: 0;
    }
  }

  // Horizontal rule
  hr {
    clear: both;

    max-width: $hr-width;
    height: 0;
    margin: $hr-margin;

    border-top: 0;
    border-right: 0;
    border-bottom: $hr-border;
    border-left: 0;
  }

  // Lists
  ul,
  ol,
  dl {
    margin-bottom: $list-margin-bottom;
    list-style-position: $list-style-position;
    line-height: $list-line-height;
  }

  // List items
  li {
    font-size: inherit;
  }

  // Unordered lists
  ul {
    margin-#{$base-left}: $list-side-margin;
    list-style-type: $list-style-type;
  }

  // Ordered lists
  ol {
    margin-#{$base-left}: $list-side-margin;
  }

  // Nested unordered/ordered lists
  ul, ol {
    & & {
      margin-#{$base-left}: $list-nested-side-margin;
      margin-bottom: 0;
    }
  }

  // Definition lists
  dl {
    margin-bottom: $definition-list-margin-bottom;

    dt {
      margin-bottom: $definition-list-term-margin-bottom;
      font-weight: $definition-list-term-weight;
    }
  }

  // Blockquotes
  blockquote {
    margin: 0 0 $paragraph-margin-bottom;
    padding: $blockquote-padding;
    border-#{$base-left}: $blockquote-border;

    &, p {
      line-height: $paragraph-line-height;
      color: $blockquote-color;
    }
  }

  // Citations
  cite {
    display: block;
    font-size: $cite-font-size;
    color: $cite-color;

    &:before {
      content: $cite-pseudo-content;
    }
  }

  // Abbreviations
  abbr {
    border-bottom: $abbr-underline;
    color: $base-font-color;
    cursor: help;
  }

  // Figures
  figure {
    margin: 0;
  }

  // Code
  code {
    padding: $code-padding;

    border: $code-border;
    background-color: $code-background;

    font-family: $code-font-family;
    font-weight: $code-font-weight;
    color: $code-color;
  }

  // Keystrokes
  kbd {
    margin: 0;
    padding: $keystroke-padding;

    background-color: $keystroke-background;

    font-family: $keystroke-font;
    color: $keystroke-color;

    @if has-value($keystroke-radius) {
      border-radius: $keystroke-radius;
    }
  }

  // Text alignments
  @each $breakpoint in map-keys($breakpoints) {
    @include breakpoint-up($breakpoint) {
      @each $align in (left, right, center, justify) {
        @if $breakpoint != sl-first(map_keys($breakpoints)) {
          .#{$breakpoint}-text-#{$align} {
            text-align: $align;
          }
        } @else {
          .text-#{$align} {
            text-align: $align;
          }
        }
      }
    }
  }
}
