/// Margin around button groups.
///
/// @type List
$button-group-margin: $button-margin !default;

/// Border radius for button groups, defaulted to base-radius.
///
/// @type Number
$button-group-radius: $button-radius !default;

@mixin button-group-base {
  align-items: stretch;
  display: flex;
  flex-wrap: nowrap;
  margin: $button-group-margin;

  .button,
  button {
    border-radius: 0;
    margin: 0;
  }

  > .button,
  > button {

    &:first-child {
      @extend %button-radius-first-child;
    }

    &:last-child {
      @extend %button-radius-last-child;
    }
  }
}

@mixin button-group-dropdown {

  &:first-child {

    > .button,
    > button {
      @extend %button-radius-first-child;
    }
  }

  &:last-child {

    > .button,
    > button {
      @extend %button-radius-last-child;
    }
  }
}

@mixin button-group {
  .button-group {
    @include button-group-base;

    .dropdown {
      @include button-group-dropdown;
    }

    // Sizes
    @each $size, $button-size in map-remove($button-sizes, default) {
      &.#{$size} {
        @each $property, $value in $button-size {
          .button,
          button {
            #{$property}: $value;
          }
        }
      }
    }
  }

  // Placeholder selectors
  %button-radius-first-child {
    border-top-#{$base-left}-radius: $button-group-radius;
    border-bottom-#{$base-left}-radius: $button-group-radius;
  }

  %button-radius-last-child {
    border-top-#{$base-right}-radius: $button-group-radius;
    border-bottom-#{$base-right}-radius: $button-group-radius;
  }
}
